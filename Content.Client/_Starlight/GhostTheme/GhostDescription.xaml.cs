using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client._Starlight.GhostTheme;

[GenerateTypedNameReferences]
public sealed partial class GhostDescription : BoxContainer
{
    public event Action? OnThemeSelected;

    public event Action<Color>? OnColorSelected;

    private ColorSelectorSliders? _rgbSkinColorSelector = null;

    public GhostDescription(
        SpriteSystem spriteSystem,
        SpriteSpecifier icon,
        string name,
        string description,
        bool colorizeable)
    {
        RobustXamlLoader.Load(this);

        PreviewImage.Texture = spriteSystem.Frame0(icon);
 
        ThemeNameLabel.Text = name;
        ThemeDescriptionLabel.Text = description;
        
        SelectButton.OnPressed += _ => OnThemeSelected?.Invoke();

        RgbSkinColorLabel.Visible = colorizeable;

        if (colorizeable)
        {
            RgbSkinColorContainer.AddChild(_rgbSkinColorSelector = new ColorSelectorSliders());
            RgbSkinColorContainer.Visible = colorizeable;
            _rgbSkinColorSelector.OnColorChanged += _ =>
            {
                OnColorSelected?.Invoke(_rgbSkinColorSelector.Color);
            };
        }
    }
}